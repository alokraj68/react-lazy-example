{"version":3,"sources":["App.js","index.js"],"names":["User","React","lazy","__webpack_require__","e","then","bind","fetchRandomUser","fetch","res","json","results","App","state","user","loadUser","_this","setState","loading","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","t0","t1","sent","t2","abrupt","call","stop","this","_this$state","react_default","createElement","className","Suspense","fallback","onClick","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"oRAEMA,SAAOC,IAAMC,KAAK,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,aAExBC,EAAkB,kBACtBC,MAAM,8BACHH,KAAK,SAAAI,GAAG,OAAIA,EAAIC,SAChBL,KAAK,SAAAI,GAAG,OAAIA,EAAIE,QAAQ,MAkCdC,6MA/BbC,MAAQ,CACNC,KAAM,QAGRC,SAAW,WACTC,EAAKC,SACH,CACEC,SAAS,GAFbC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAIE,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,GAAAb,EAAAU,EAAAE,KAAA,EAAwCrB,IAAxC,cAAAmB,EAAAI,GAAAJ,EAAAK,KAAAL,EAAAM,GAAA,CAA4BlB,KAA5BY,EAAAI,GAA2DZ,SAAS,GAApEQ,EAAAO,OAAA,SAAAP,EAAAG,GAAiBZ,SAAjBiB,KAAAR,EAAAG,GAAAH,EAAAM,KAAA,wBAAAN,EAAAS,SAAAX,EAAAY,mFAIK,IAAAC,EACmBD,KAAKvB,MAAvBC,EADDuB,EACCvB,KAAMI,EADPmB,EACOnB,QAEd,OACEoB,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,OACbF,EAAAhB,EAAAiB,cAACD,EAAAhB,EAAMmB,SAAP,CAAgBC,SAAUJ,EAAAhB,EAAAiB,cAAA,oCACvBzB,GAAQwB,EAAAhB,EAAAiB,cAACvC,EAAD,CAAMc,KAAMA,IACpBI,EACCoB,EAAAhB,EAAAiB,cAAA,+BAECzB,GAAQwB,EAAAhB,EAAAiB,cAAA,UAAQI,QAASP,KAAKrB,UAAtB,uBAxBH6B,aCJlBC,IAASC,OAAOR,EAAAhB,EAAAiB,cAACQ,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5db567f4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nconst User = React.lazy(() => import('./User'));\n\nconst fetchRandomUser = () =>\n  fetch('https://randomuser.me/api/')\n    .then(res => res.json())\n    .then(res => res.results[0]);\n\nclass App extends Component {\n  state = {\n    user: null,\n  };\n\n  loadUser = () => {\n    this.setState(\n      {\n        loading: true,\n      },\n      async () => this.setState({ user: await fetchRandomUser(), loading: false }),\n    );\n  };\n\n  render() {\n    const { user, loading } = this.state;\n\n    return (\n      <div className=\"App\">\n        <React.Suspense fallback={<div>Loading Component...</div>}>\n          {user && <User user={user}/>}\n          {loading ? (\n            <div>Loading User...</div>\n          ) : (\n            !user && <button onClick={this.loadUser}>Press Me!!</button>\n          )}\n        </React.Suspense>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}